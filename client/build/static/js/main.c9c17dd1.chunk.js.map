{"version":3,"sources":["utils/auth.js","components/Header/index.js","components/Footer/index.js","components/ThoughtList/index.js","utils/mutations.js","utils/queries.js","components/ThoughtForm/index.js","components/FriendList/index.js","pages/Home.js","pages/Login.js","pages/NoMatch.js","components/ReactionList/index.js","components/ReactionForm/index.js","pages/SingleThought.js","pages/Profile.js","pages/Signup.js","App.js","reportWebVitals.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Header","className","to","Auth","loggedIn","href","onClick","event","preventDefault","logout","Footer","getFullYear","ThoughtList","thoughts","title","length","map","thought","username","style","fontWeight","createdAt","_id","thoughtText","reactionCount","LOGIN_USER","gql","ADD_USER","ADD_THOUGHT","ADD_REACTION","ADD_FRIEND","QUERY_THOUGHTS","QUERY_THOUGHT","QUERY_USER","QUERY_ME","QUERY_ME_BASIC","ThoughtForm","useState","setText","characterCount","setCharacterCount","useMutation","update","cache","addThought","data","readQuery","query","writeQuery","e","console","error","me","handleFormSubmit","a","variables","onSubmit","placeholder","value","onChange","target","type","FriendList","friendCount","friends","friend","Home","useQuery","loading","userData","Login","props","email","password","formState","setFormState","login","handleChange","name","id","NoMatch","ReactionList","reactions","reaction","reactionBody","ReactionForm","thoughtId","setBody","addReaction","SingleThought","useParams","Profile","userParam","addFriend","user","getProfile","handleClick","Signup","addUser","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","InMemoryCache","App","ApolloProvider","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9c17dd1.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    // axios.defaults.headers.common[\"Authorization\"] = null;\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\n\nconst Header = () => {\n  const logout = event => {\n    event.preventDefault();\n    Auth.logout();\n  };\n\n  return (\n    <header className=\"bg-secondary mb-4 py-2 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <Link to=\"/\">\n          <h1>Deep Thoughts</h1>\n        </Link>\n\n        <nav className=\"text-center\">\n          {Auth.loggedIn() ? (\n            <>\n              <Link to=\"/profile\">Me</Link>\n              <a href=\"/\" onClick={logout}>\n                Logout\n              </a>\n            </>\n          ) : (\n            <>\n              <Link to=\"/login\">Login</Link>\n              <Link to=\"/signup\">Signup</Link>\n            </>\n          )}\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container\">\n        &copy;{new Date().getFullYear()} by Lernantino\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ThoughtList = ({ thoughts, title }) => {\n  if (!thoughts.length) {\n    return <h3>No Thoughts Yet</h3>;\n  }\n\n  return (\n    <div>\n      <h3>{title}</h3>\n      {thoughts &&\n        thoughts.map(thought => (\n          <div key={thought._id} className=\"card mb-3\">\n            <p className=\"card-header\">\n              <Link\n                to={`/profile/${thought.username}`}\n                style={{ fontWeight: 700 }}\n                className=\"text-light\"\n              >\n                {thought.username}\n              </Link>{' '}\n              thought on {thought.createdAt}\n            </p>\n            <div className=\"card-body\">\n              <Link to={`/thought/${thought._id}`}>\n                <p>{thought.thoughtText}</p>\n                <p className=\"mb-0\">\n                  Reactions: {thought.reactionCount} || Click to{' '}\n                  {thought.reactionCount ? 'see' : 'start'} the discussion!\n                </p>\n              </Link>\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default ThoughtList;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_THOUGHT = gql`\n  mutation addThought($thoughtText: String!) {\n    addThought(thoughtText: $thoughtText) {\n      _id\n      thoughtText\n      createdAt\n      username\n      reactionCount\n      reactions {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_REACTION = gql`\n  mutation addReaction($thoughtId: ID!, $reactionBody: String!) {\n    addReaction(thoughtId: $thoughtId, reactionBody: $reactionBody) {\n      _id\n      reactionCount\n      reactions {\n        _id\n        reactionBody\n        createdAt\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_FRIEND = gql`\n  mutation addFriend($id: ID!) {\n    addFriend(friendId: $id) {\n      _id\n      username\n      friendCount\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const REMOVE_FRIEND = gql`\n  mutation removeFriend($id: ID!) {\n    removeFriend(id: $id) {\n      _id\n      username\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_THOUGHTS = gql`\n  query thoughts($username: String) {\n    thoughts(username: $username) {\n      _id\n      thoughtText\n      createdAt\n      username\n      reactionCount\n      reactions {\n        _id\n        createdAt\n        username\n        reactionBody\n      }\n    }\n  }\n`;\n\nexport const QUERY_THOUGHT = gql`\n  query thought($id: ID!) {\n    thought(_id: $id) {\n      _id\n      thoughtText\n      createdAt\n      username\n      reactionCount\n      reactions {\n        _id\n        createdAt\n        username\n        reactionBody\n      }\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      friendCount\n      friends {\n        _id\n        username\n      }\n      thoughts {\n        _id\n        thoughtText\n        createdAt\n        reactionCount\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  {\n    me {\n      _id\n      username\n      email\n      friendCount\n      thoughts {\n        _id\n        thoughtText\n        createdAt\n        reactionCount\n        reactions {\n          _id\n          createdAt\n          reactionBody\n          username\n        }\n      }\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const QUERY_ME_BASIC = gql`\n  {\n    me {\n      _id\n      username\n      email\n      friendCount\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        // update thought array's cache\n        // could potentially not exist yet, so wrap in a try/catch\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    if (event.target.value.length <= 280) {\n      setText(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      await addThought({\n        variables: { thoughtText },\n      });\n\n      // clear form value\n      setText('');\n      setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <p\n        className={`m-0 ${characterCount === 280 || error ? 'text-error' : ''}`}\n      >\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n      >\n        <textarea\n          placeholder=\"Here's a new thought...\"\n          value={thoughtText}\n          className=\"form-input col-12 col-md-9\"\n          onChange={handleChange}\n        ></textarea>\n        <button className=\"btn col-12 col-md-3\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst FriendList = ({ friendCount, username, friends }) => {\n  if (!friends || !friends.length) {\n    return <p className=\"bg-dark text-light p-3\">{username}, make some friends!</p>;\n  }\n\n  return (\n    <div>\n      <h5>\n        {username}'s {friendCount} {friendCount === 1 ? 'friend' : 'friends'}\n      </h5>\n      {friends.map(friend => (\n        <button className=\"btn w-100 display-block mb-2\" key={friend._id}>\n          <Link to={`/profile/${friend.username}`}>{friend.username}</Link>\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default FriendList;\n","import React from 'react';\nimport ThoughtList from '../components/ThoughtList';\nimport ThoughtForm from '../components/ThoughtForm';\nimport FriendList from '../components/FriendList';\n\nimport Auth from '../utils/auth';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_THOUGHTS, QUERY_ME_BASIC } from '../utils/queries';\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_THOUGHTS);\n  const { data: userData } = useQuery(QUERY_ME_BASIC);\n  const thoughts = data?.thoughts || [];\n\n  const loggedIn = Auth.loggedIn();\n\n  return (\n    <main>\n      <div className=\"flex-row justify-space-between\">\n        {loggedIn && (\n          <div className=\"col-12 mb-3\">\n            <ThoughtForm />\n          </div>\n        )}\n        <div className={`col-12 mb-3 ${loggedIn && 'col-lg-8'}`}>\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <ThoughtList\n              thoughts={thoughts}\n              title=\"Some Feed for Thought(s)...\"\n            />\n          )}\n        </div>\n        {loggedIn && userData ? (\n          <div className=\"col-12 col-lg-3 mb-3\">\n            <FriendList\n              username={userData.me.username}\n              friendCount={userData.me.friendCount}\n              friends={userData.me.friends}\n            />\n          </div>\n        ) : null}\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-md-6\">\n        <div className=\"card\">\n          <h4 className=\"card-header\">Login</h4>\n          <div className=\"card-body\">\n            <form onSubmit={handleFormSubmit}>\n              <input\n                className=\"form-input\"\n                placeholder=\"Your email\"\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                value={formState.password}\n                onChange={handleChange}\n              />\n              <button className=\"btn d-block w-100\" type=\"submit\">\n                Submit\n              </button>\n            </form>\n\n            {error && <div>Login failed</div>}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nconst NoMatch = () => {\n  return (\n    <div>\n      Oops, we couldn't find that page.\n    </div>\n  );\n};\n\nexport default NoMatch;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ReactionList = ({ reactions }) => {\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-header\">\n        <span className=\"text-light\">Reactions</span>\n      </div>\n      <div className=\"card-body\">\n        {reactions &&\n          reactions.map(reaction => (\n            <p className=\"pill mb-3\" key={reaction._id}>\n              {reaction.reactionBody} //{' '}\n              <Link to={`/profile/${reaction.username}`} style={{ fontWeight: 700 }}>\n                {reaction.username} on {reaction.createdAt}\n              </Link>\n            </p>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ReactionList;\n","import React, { useState } from 'react';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_REACTION } from '../../utils/mutations';\n\nconst ReactionForm = ({ thoughtId }) => {\n  const [reactionBody, setBody] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addReaction, { error }] = useMutation(ADD_REACTION);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    if (event.target.value.length <= 280) {\n      setBody(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      await addReaction({\n        variables: { reactionBody, thoughtId },\n      });\n\n      // clear form value\n      setBody('');\n      setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <p\n        className={`m-0 ${characterCount === 280 || error ? 'text-error' : ''}`}\n      >\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n      >\n        <textarea\n          placeholder=\"Leave a reaction to this thought...\"\n          value={reactionBody}\n          className=\"form-input col-12 col-md-9\"\n          onChange={handleChange}\n        ></textarea>\n\n        <button className=\"btn col-12 col-md-3\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n\n      {error && <div>Something went wrong...</div>}\n    </div>\n  );\n};\n\nexport default ReactionForm;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ReactionList from '../components/ReactionList';\nimport ReactionForm from '../components/ReactionForm';\n\nimport Auth from '../utils/auth';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_THOUGHT } from '../utils/queries';\n\nconst SingleThought = (props) => {\n  const { id: thoughtId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_THOUGHT, {\n    variables: { id: thoughtId },\n  });\n\n  const thought = data?.thought || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <div className=\"card mb-3\">\n        <p className=\"card-header\">\n          <span style={{ fontWeight: 700 }} className=\"text-light\">\n            {thought.username}\n          </span>{' '}\n          thought on {thought.createdAt}\n        </p>\n        <div className=\"card-body\">\n          <p>{thought.thoughtText}</p>\n        </div>\n      </div>\n\n      {thought.reactionCount > 0 && (\n        <ReactionList reactions={thought.reactions} />\n      )}\n\n      {Auth.loggedIn() && <ReactionForm thoughtId={thought._id} />}\n    </div>\n  );\n};\n\nexport default SingleThought;\n","import React from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\n\nimport ThoughtForm from '../components/ThoughtForm';\nimport ThoughtList from '../components/ThoughtList';\nimport FriendList from '../components/FriendList';\n\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\nimport { ADD_FRIEND } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst Profile = (props) => {\n  const { username: userParam } = useParams();\n\n  const [addFriend] = useMutation(ADD_FRIEND);\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n\n  // redirect to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Redirect to=\"/profile\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n  const handleClick = async () => {\n    try {\n      await addFriend({\n        variables: { id: user._id },\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"flex-row mb-3\">\n        <h2 className=\"bg-dark text-secondary p-3 display-inline-block\">\n          Viewing {userParam ? `${user.username}'s` : 'your'} profile.\n        </h2>\n\n        {userParam && (\n          <button className=\"btn ml-auto\" onClick={handleClick}>\n            Add Friend\n          </button>\n        )}\n      </div>\n\n      <div className=\"flex-row justify-space-between mb-3\">\n        <div className=\"col-12 mb-3 col-lg-8\">\n          <ThoughtList\n            thoughts={user.thoughts}\n            title={`${user.username}'s thoughts...`}\n          />\n        </div>\n\n        <div className=\"col-12 col-lg-3 mb-3\">\n          <FriendList\n            username={user.username}\n            friendCount={user.friendCount}\n            friends={user.friends}\n          />\n        </div>\n      </div>\n      <div className=\"mb-3\">{!userParam && <ThoughtForm />}</div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-md-6\">\n        <div className=\"card\">\n          <h4 className=\"card-header\">Sign Up</h4>\n          <div className=\"card-body\">\n            <form onSubmit={handleFormSubmit}>\n              <input\n                className=\"form-input\"\n                placeholder=\"Your username\"\n                name=\"username\"\n                type=\"username\"\n                id=\"username\"\n                value={formState.username}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"Your email\"\n                name=\"email\"\n                type=\"email\"\n                id=\"email\"\n                value={formState.email}\n                onChange={handleChange}\n              />\n              <input\n                className=\"form-input\"\n                placeholder=\"******\"\n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                value={formState.password}\n                onChange={handleChange}\n              />\n              <button className=\"btn d-block w-100\" type=\"submit\">\n                Submit\n              </button>\n            </form>\n\n            {error && <div>Signup failed</div>}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport NoMatch from './pages/NoMatch';\nimport SingleThought from './pages/SingleThought';\nimport Profile from './pages/Profile';\nimport Signup from './pages/Signup';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/profile/:username?\" component={Profile} />\n              <Route exact path=\"/thought/:id\" component={SingleThought} />\n\n              <Route component={NoMatch} />\n            </Switch>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}