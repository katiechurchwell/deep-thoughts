{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/katiechurchwell/Desktop/code/projects/deep-thoughts/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;import{gql}from'@apollo/client';export var LOGIN_USER=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  mutation login($email: String!, $password: String!) {\\n    login(email: $email, password: $password) {\\n      token\\n      user {\\n        _id\\n        username\\n      }\\n    }\\n  }\\n\"])));export var ADD_USER=gql(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  mutation addUser($username: String!, $email: String!, $password: String!) {\\n    addUser(username: $username, email: $email, password: $password) {\\n      token\\n      user {\\n        _id\\n        username\\n      }\\n    }\\n  }\\n\"])));export var ADD_THOUGHT=gql(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  mutation addThought($thoughtText: String!) {\\n    addThought(thoughtText: $thoughtText) {\\n      _id\\n      thoughtText\\n      createdAt\\n      username\\n      reactionCount\\n      reactions {\\n        _id\\n      }\\n    }\\n  }\\n\"])));export var ADD_REACTION=gql(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  mutation addReaction($thoughtId: ID!, $reactionBody: String!) {\\n    addReaction(thoughtId: $thoughtId, reactionBody: $reactionBody) {\\n      _id\\n      reactionCount\\n      reactions {\\n        _id\\n        reactionBody\\n        createdAt\\n        username\\n      }\\n    }\\n  }\\n\"])));export var ADD_FRIEND=gql(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  mutation addFriend($id: ID!) {\\n    addFriend(friendId: $id) {\\n      _id\\n      username\\n      friendCount\\n      friends {\\n        _id\\n        username\\n      }\\n    }\\n  }\\n\"])));export var REMOVE_FRIEND=gql(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  mutation removeFriend($id: ID!) {\\n    removeFriend(id: $id) {\\n      _id\\n      username\\n      friends {\\n        _id\\n        username\\n      }\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["/Users/katiechurchwell/Desktop/code/projects/deep-thoughts/client/src/utils/mutations.js"],"names":["gql","LOGIN_USER","ADD_USER","ADD_THOUGHT","ADD_REACTION","ADD_FRIEND","REMOVE_FRIEND"],"mappings":"gRAAA,OAASA,GAAT,KAAoB,gBAApB,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAGD,GAAH,4PAAhB,CAYP,MAAO,IAAME,CAAAA,QAAQ,CAAGF,GAAH,2SAAd,CAYP,MAAO,IAAMG,CAAAA,WAAW,CAAGH,GAAH,2SAAjB,CAeP,MAAO,IAAMI,CAAAA,YAAY,CAAGJ,GAAH,+VAAlB,CAeP,MAAO,IAAMK,CAAAA,UAAU,CAAGL,GAAH,0PAAhB,CAcP,MAAO,IAAMM,CAAAA,aAAa,CAAGN,GAAH,uOAAnB","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_THOUGHT = gql`\n  mutation addThought($thoughtText: String!) {\n    addThought(thoughtText: $thoughtText) {\n      _id\n      thoughtText\n      createdAt\n      username\n      reactionCount\n      reactions {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_REACTION = gql`\n  mutation addReaction($thoughtId: ID!, $reactionBody: String!) {\n    addReaction(thoughtId: $thoughtId, reactionBody: $reactionBody) {\n      _id\n      reactionCount\n      reactions {\n        _id\n        reactionBody\n        createdAt\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_FRIEND = gql`\n  mutation addFriend($id: ID!) {\n    addFriend(friendId: $id) {\n      _id\n      username\n      friendCount\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const REMOVE_FRIEND = gql`\n  mutation removeFriend($id: ID!) {\n    removeFriend(id: $id) {\n      _id\n      username\n      friends {\n        _id\n        username\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}