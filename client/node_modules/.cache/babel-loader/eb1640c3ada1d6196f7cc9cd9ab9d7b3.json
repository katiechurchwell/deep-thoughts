{"ast":null,"code":"import _objectSpread from\"/Users/katiechurchwell/Desktop/code/projects/deep-thoughts/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{BrowserRouter as Router,Route,Switch}from'react-router-dom';import{ApolloClient,InMemoryCache,ApolloProvider,createHttpLink}from'@apollo/client';import{setContext}from'@apollo/client/link/context';import Header from'./components/Header';import Footer from'./components/Footer';import Home from'./pages/Home';import Login from'./pages/Login';import NoMatch from'./pages/NoMatch';import SingleThought from'./pages/SingleThought';import Profile from'./pages/Profile';import Signup from'./pages/Signup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var httpLink=createHttpLink({uri:'/graphql'});var authLink=setContext(function(_,_ref){var headers=_ref.headers;var token=localStorage.getItem('id_token');return{headers:_objectSpread(_objectSpread({},headers),{},{authorization:token?\"Bearer \".concat(token):''})};});var client=new ApolloClient({link:authLink.concat(httpLink),cache:new InMemoryCache()});function App(){return/*#__PURE__*/_jsx(ApolloProvider,{client:client,children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex-column justify-flex-start min-100-vh\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:Home}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",component:Login}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/signup\",component:Signup}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/profile/:username?\",component:Profile}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/thought/:id\",component:SingleThought}),/*#__PURE__*/_jsx(Route,{component:NoMatch})]})}),/*#__PURE__*/_jsx(Footer,{})]})})});}export default App;","map":{"version":3,"sources":["/Users/katiechurchwell/Desktop/code/projects/deep-thoughts/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","Header","Footer","Home","Login","NoMatch","SingleThought","Profile","Signup","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App"],"mappings":"sJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,CAAyCC,MAAzC,KAAuD,kBAAvD,CACA,OACEC,YADF,CAEEC,aAFF,CAGEC,cAHF,CAIEC,cAJF,KAKO,gBALP,CAMA,OAASC,UAAT,KAA2B,6BAA3B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,iBAApB,CACA,MAAOC,CAAAA,aAAP,KAA0B,uBAA1B,CACA,MAAOC,CAAAA,OAAP,KAAoB,iBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gBAAnB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAGV,cAAc,CAAC,CAC9BW,GAAG,CAAE,UADyB,CAAD,CAA/B,CAIA,GAAMC,CAAAA,QAAQ,CAAGX,UAAU,CAAC,SAACY,CAAD,MAAoB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAC9C,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd,CACA,MAAO,CACLH,OAAO,gCACFA,OADE,MAELI,aAAa,CAAEH,KAAK,kBAAaA,KAAb,EAAuB,EAFtC,EADF,CAAP,CAMD,CAR0B,CAA3B,CAUA,GAAMI,CAAAA,MAAM,CAAG,GAAItB,CAAAA,YAAJ,CAAiB,CAC9BuB,IAAI,CAAER,QAAQ,CAACS,MAAT,CAAgBX,QAAhB,CADwB,CAE9BY,KAAK,CAAE,GAAIxB,CAAAA,aAAJ,EAFuB,CAAjB,CAAf,CAKA,QAASyB,CAAAA,GAAT,EAAe,CACb,mBACE,KAAC,cAAD,EAAgB,MAAM,CAAEJ,MAAxB,uBACE,KAAC,MAAD,wBACE,aAAK,SAAS,CAAC,2CAAf,wBACE,KAAC,MAAD,IADF,cAEE,YAAK,SAAS,CAAC,WAAf,uBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAEf,IAAjC,EADF,cAEE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,CAA2B,SAAS,CAAEC,KAAtC,EAFF,cAGE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,SAAlB,CAA4B,SAAS,CAAEI,MAAvC,EAHF,cAIE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,qBAAlB,CAAwC,SAAS,CAAED,OAAnD,EAJF,cAKE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,cAAlB,CAAiC,SAAS,CAAED,aAA5C,EALF,cAOE,KAAC,KAAD,EAAO,SAAS,CAAED,OAAlB,EAPF,GADF,EAFF,cAaE,KAAC,MAAD,IAbF,GADF,EADF,EADF,CAqBD,CAED,cAAeiB,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport NoMatch from './pages/NoMatch';\nimport SingleThought from './pages/SingleThought';\nimport Profile from './pages/Profile';\nimport Signup from './pages/Signup';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/profile/:username?\" component={Profile} />\n              <Route exact path=\"/thought/:id\" component={SingleThought} />\n\n              <Route component={NoMatch} />\n            </Switch>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}