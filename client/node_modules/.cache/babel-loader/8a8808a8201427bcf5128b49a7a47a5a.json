{"ast":null,"code":"var _jsxFileName = \"/Users/katiechurchwell/Desktop/code/projects/deep-thoughts/client/src/components/ReactionForm/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_REACTION } from '../../utils/mutations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReactionForm = _ref => {\n  _s();\n\n  let {\n    thoughtId\n  } = _ref;\n  const [reactionBody, setBody] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addReaction, {\n    error\n  }] = useMutation(ADD_REACTION); // update state based on form input changes\n\n  const handleChange = event => {\n    if (event.target.value.length <= 280) {\n      setBody(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  }; // submit form\n\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await addReaction({\n        variables: {\n          reactionBody,\n          thoughtId\n        }\n      }); // clear form value\n\n      setBody('');\n      setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: `m-0 ${characterCount === 280 || error ? 'text-error' : ''}`,\n      children: [\"Character Count: \", characterCount, \"/280\", error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2\",\n        children: \"Something went wrong...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"flex-row justify-center justify-space-between-md align-stretch\",\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Leave a reaction to this thought...\",\n        value: reactionBody,\n        className: \"form-input col-12 col-md-9\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn col-12 col-md-3\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Something went wrong...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReactionForm, \"RWYLA+oCIBQCIPFbr97gPk5FCGg=\", false, function () {\n  return [useMutation];\n});\n\n_c = ReactionForm;\nexport default ReactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactionForm\");","map":{"version":3,"sources":["/Users/katiechurchwell/Desktop/code/projects/deep-thoughts/client/src/components/ReactionForm/index.js"],"names":["React","useState","useMutation","ADD_REACTION","ReactionForm","thoughtId","reactionBody","setBody","characterCount","setCharacterCount","addReaction","error","handleChange","event","target","value","length","handleFormSubmit","preventDefault","variables","e","console"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,YAAT,QAA6B,uBAA7B;;;AAEA,MAAMC,YAAY,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AACtC,QAAM,CAACC,YAAD,EAAeC,OAAf,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACS,WAAD,EAAc;AAAEC,IAAAA;AAAF,GAAd,IAA2BT,WAAW,CAACC,YAAD,CAA5C,CAHsC,CAKtC;;AACA,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,IAA6B,GAAjC,EAAsC;AACpCT,MAAAA,OAAO,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACAN,MAAAA,iBAAiB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAApB,CAAjB;AACD;AACF,GALD,CANsC,CAatC;;;AACA,QAAMC,gBAAgB,GAAG,MAAOJ,KAAP,IAAiB;AACxCA,IAAAA,KAAK,CAACK,cAAN;;AAEA,QAAI;AACF,YAAMR,WAAW,CAAC;AAChBS,QAAAA,SAAS,EAAE;AAAEb,UAAAA,YAAF;AAAgBD,UAAAA;AAAhB;AADK,OAAD,CAAjB,CADE,CAKF;;AACAE,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,iBAAiB,CAAC,CAAD,CAAjB;AACD,KARD,CAQE,OAAOW,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACV,KAAR,CAAcS,CAAd;AACD;AACF,GAdD;;AAgBA,sBACE;AAAA,4BACE;AACE,MAAA,SAAS,EAAG,OAAMZ,cAAc,KAAK,GAAnB,IAA0BG,KAA1B,GAAkC,YAAlC,GAAiD,EAAG,EADxE;AAAA,sCAGoBH,cAHpB,UAIGG,KAAK,iBAAI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AACE,MAAA,SAAS,EAAC,gEADZ;AAEE,MAAA,QAAQ,EAAEM,gBAFZ;AAAA,8BAIE;AACE,QAAA,WAAW,EAAC,qCADd;AAEE,QAAA,KAAK,EAAEX,YAFT;AAGE,QAAA,SAAS,EAAC,4BAHZ;AAIE,QAAA,QAAQ,EAAEM;AAJZ;AAAA;AAAA;AAAA;AAAA,cAJF,eAWE;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,IAAI,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,EAuBGD,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAzDD;;GAAMP,Y;UAG6BF,W;;;KAH7BE,Y;AA2DN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_REACTION } from '../../utils/mutations';\n\nconst ReactionForm = ({ thoughtId }) => {\n  const [reactionBody, setBody] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addReaction, { error }] = useMutation(ADD_REACTION);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    if (event.target.value.length <= 280) {\n      setBody(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      await addReaction({\n        variables: { reactionBody, thoughtId },\n      });\n\n      // clear form value\n      setBody('');\n      setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <p\n        className={`m-0 ${characterCount === 280 || error ? 'text-error' : ''}`}\n      >\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n      >\n        <textarea\n          placeholder=\"Leave a reaction to this thought...\"\n          value={reactionBody}\n          className=\"form-input col-12 col-md-9\"\n          onChange={handleChange}\n        ></textarea>\n\n        <button className=\"btn col-12 col-md-3\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n\n      {error && <div>Something went wrong...</div>}\n    </div>\n  );\n};\n\nexport default ReactionForm;\n"]},"metadata":{},"sourceType":"module"}