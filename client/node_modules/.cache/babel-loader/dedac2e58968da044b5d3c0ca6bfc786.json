{"ast":null,"code":"import _asyncToGenerator from\"/Users/katiechurchwell/Desktop/code/projects/deep-thoughts/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/Users/katiechurchwell/Desktop/code/projects/deep-thoughts/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/katiechurchwell/Desktop/code/projects/deep-thoughts/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/katiechurchwell/Desktop/code/projects/deep-thoughts/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/katiechurchwell/Desktop/code/projects/deep-thoughts/client/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState}from'react';import{useMutation}from'@apollo/client';import{ADD_THOUGHT}from'../../utils/mutations';import{QUERY_THOUGHTS,QUERY_ME}from'../../utils/queries';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ThoughtForm=function ThoughtForm(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),thoughtText=_useState2[0],setText=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),characterCount=_useState4[0],setCharacterCount=_useState4[1];var _useMutation=useMutation(ADD_THOUGHT,{update:function update(cache,_ref){var addThought=_ref.data.addThought;try{// update thought array's cache\n// could potentially not exist yet, so wrap in a try/catch\nvar _cache$readQuery=cache.readQuery({query:QUERY_THOUGHTS}),thoughts=_cache$readQuery.thoughts;cache.writeQuery({query:QUERY_THOUGHTS,data:{thoughts:[addThought].concat(_toConsumableArray(thoughts))}});}catch(e){console.error(e);}// update me object's cache\n// update me object's cache\nvar _cache$readQuery2=cache.readQuery({query:QUERY_ME}),me=_cache$readQuery2.me;cache.writeQuery({query:QUERY_ME,data:{me:_objectSpread(_objectSpread({},me),{},{thoughts:[].concat(_toConsumableArray(me.thoughts),[addThought])})}});}}),_useMutation2=_slicedToArray(_useMutation,2),addThought=_useMutation2[0],error=_useMutation2[1].error;// update state based on form input changes\nvar handleChange=function handleChange(event){if(event.target.value.length<=280){setText(event.target.value);setCharacterCount(event.target.value.length);}};// submit form\nvar handleFormSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();_context.prev=1;_context.next=4;return addThought({variables:{thoughtText:thoughtText}});case 4:// clear form value\nsetText('');setCharacterCount(0);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);console.error(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function handleFormSubmit(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"m-0 \".concat(characterCount===280||error?'text-error':''),children:[\"Character Count: \",characterCount,\"/280\",error&&/*#__PURE__*/_jsx(\"span\",{className:\"ml-2\",children:\"Something went wrong...\"})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"flex-row justify-center justify-space-between-md align-stretch\",onSubmit:handleFormSubmit,children:[/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Here's a new thought...\",value:thoughtText,className:\"form-input col-12 col-md-9\",onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{className:\"btn col-12 col-md-3\",type:\"submit\",children:\"Submit\"})]})]});};export default ThoughtForm;","map":{"version":3,"sources":["/Users/katiechurchwell/Desktop/code/projects/deep-thoughts/client/src/components/ThoughtForm/index.js"],"names":["React","useState","useMutation","ADD_THOUGHT","QUERY_THOUGHTS","QUERY_ME","ThoughtForm","thoughtText","setText","characterCount","setCharacterCount","update","cache","addThought","data","readQuery","query","thoughts","writeQuery","e","console","error","me","handleChange","event","target","value","length","handleFormSubmit","preventDefault","variables"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS, QUERY_ME } from '../../utils/queries';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        // update thought array's cache\n        // could potentially not exist yet, so wrap in a try/catch\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, thoughts: [...me.thoughts, addThought] } },\n      });\n    },\n  });\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    if (event.target.value.length <= 280) {\n      setText(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      await addThought({\n        variables: { thoughtText },\n      });\n\n      // clear form value\n      setText('');\n      setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <p\n        className={`m-0 ${characterCount === 280 || error ? 'text-error' : ''}`}\n      >\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n      >\n        <textarea\n          placeholder=\"Here's a new thought...\"\n          value={thoughtText}\n          className=\"form-input col-12 col-md-9\"\n          onChange={handleChange}\n        ></textarea>\n        <button className=\"btn col-12 col-md-3\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n"]},"metadata":{},"sourceType":"module"}