{"ast":null,"code":"import React from'react';import{useParams}from'react-router-dom';import ReactionList from'../components/ReactionList';import ReactionForm from'../components/ReactionForm';import Auth from'../utils/auth';import{useQuery}from'@apollo/client';import{QUERY_THOUGHT}from'../utils/queries';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SingleThought=function SingleThought(props){var _useParams=useParams(),thoughtId=_useParams.id;var _useQuery=useQuery(QUERY_THOUGHT,{variables:{id:thoughtId}}),loading=_useQuery.loading,data=_useQuery.data;var thought=(data===null||data===void 0?void 0:data.thought)||{};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card mb-3\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:700},className:\"text-light\",children:thought.username}),' ',\"thought on \",thought.createdAt]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsx(\"p\",{children:thought.thoughtText})})]}),thought.reactionCount>0&&/*#__PURE__*/_jsx(ReactionList,{reactions:thought.reactions}),Auth.loggedIn()&&/*#__PURE__*/_jsx(ReactionForm,{thoughtId:thought._id})]});};export default SingleThought;","map":{"version":3,"sources":["/Users/katiechurchwell/Desktop/code/projects/deep-thoughts/client/src/pages/SingleThought.js"],"names":["React","useParams","ReactionList","ReactionForm","Auth","useQuery","QUERY_THOUGHT","SingleThought","props","thoughtId","id","variables","loading","data","thought","fontWeight","username","createdAt","thoughtText","reactionCount","reactions","loggedIn","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,kBAA1B,CAEA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,eAAjB,CACA,OAASC,QAAT,KAAyB,gBAAzB,CACA,OAASC,aAAT,KAA8B,kBAA9B,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC/B,eAA0BP,SAAS,EAAnC,CAAYQ,SAAZ,YAAQC,EAAR,CAEA,cAA0BL,QAAQ,CAACC,aAAD,CAAgB,CAChDK,SAAS,CAAE,CAAED,EAAE,CAAED,SAAN,CADqC,CAAhB,CAAlC,CAAQG,OAAR,WAAQA,OAAR,CAAiBC,IAAjB,WAAiBA,IAAjB,CAIA,GAAMC,CAAAA,OAAO,CAAG,CAAAD,IAAI,OAAJ,EAAAA,IAAI,SAAJ,QAAAA,IAAI,CAAEC,OAAN,GAAiB,EAAjC,CAEA,GAAIF,OAAJ,CAAa,CACX,mBAAO,mCAAP,CACD,CAED,mBACE,oCACE,aAAK,SAAS,CAAC,WAAf,wBACE,WAAG,SAAS,CAAC,aAAb,wBACE,aAAM,KAAK,CAAE,CAAEG,UAAU,CAAE,GAAd,CAAb,CAAkC,SAAS,CAAC,YAA5C,UACGD,OAAO,CAACE,QADX,EADF,CAGU,GAHV,eAIcF,OAAO,CAACG,SAJtB,GADF,cAOE,YAAK,SAAS,CAAC,WAAf,uBACE,mBAAIH,OAAO,CAACI,WAAZ,EADF,EAPF,GADF,CAaGJ,OAAO,CAACK,aAAR,CAAwB,CAAxB,eACC,KAAC,YAAD,EAAc,SAAS,CAAEL,OAAO,CAACM,SAAjC,EAdJ,CAiBGhB,IAAI,CAACiB,QAAL,iBAAmB,KAAC,YAAD,EAAc,SAAS,CAAEP,OAAO,CAACQ,GAAjC,EAjBtB,GADF,CAqBD,CAlCD,CAoCA,cAAef,CAAAA,aAAf","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ReactionList from '../components/ReactionList';\nimport ReactionForm from '../components/ReactionForm';\n\nimport Auth from '../utils/auth';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_THOUGHT } from '../utils/queries';\n\nconst SingleThought = (props) => {\n  const { id: thoughtId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_THOUGHT, {\n    variables: { id: thoughtId },\n  });\n\n  const thought = data?.thought || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <div className=\"card mb-3\">\n        <p className=\"card-header\">\n          <span style={{ fontWeight: 700 }} className=\"text-light\">\n            {thought.username}\n          </span>{' '}\n          thought on {thought.createdAt}\n        </p>\n        <div className=\"card-body\">\n          <p>{thought.thoughtText}</p>\n        </div>\n      </div>\n\n      {thought.reactionCount > 0 && (\n        <ReactionList reactions={thought.reactions} />\n      )}\n\n      {Auth.loggedIn() && <ReactionForm thoughtId={thought._id} />}\n    </div>\n  );\n};\n\nexport default SingleThought;\n"]},"metadata":{},"sourceType":"module"}